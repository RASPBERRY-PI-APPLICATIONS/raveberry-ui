/* -----------------------  SASS -----------------------------------
* WHY USE SASS?
------------------------------------------
* 1. Maintainable - because you can use nesting in every case.
* 2. Reuse - using variable.
* 3. Compass.
* 4. Avoid Browser Prefixes.
* 5. Compression.
------------------------------------------
* COMMENTS IN SASS
------------------------------------------
1. // - single line comments, will be wiped out by compilers.
2. /**n/ - multi-line comments, remains after being compiled.
3. /*! *n/ - loud comments, remains after being compiled. 
-----------------------------------------
* GITHUB CHECKS
-----------------------------------------
1. NORMALIZE SCSS - normalizes scss across all browsers
2. compass - effective for scss 
3. using MIXING (functions in sass) - e.g 

 @mixin default-text-color($tc:$black)
  {
      color : $tc
  }

------------------------------------------------
* IMAGES
------------------------------------------------
img [alt="raspberry"] {
   content: image-url("../pics/FNjLPdIVkAMEKPV.jpeg");
}
-------------------------------------------------
* FEATURES
-------------------------------------------------
*/

$SASS_color: #a12e6e;
$default-color: #a03a3a;
$red: #ff0000;
$white: #ffffff;
$grey: #808080;
$brown: #a52a2a;
$yellow: #ffff00;
/* -----------------------  importing ---------------------- */
//  @import "/node_modules/compass/";
* {
   -webkit-box-sizing: border-box;
   -moz-box-sizing: border-box;
   box-sizing: border-box;
}
/* ------------- creating usable elements (compass)------------ */

%borderBoxElement {
   border: 1px solid $yellow;
}
.body-wrapper {
   color: $SASS_color;
   /* -----------  using @mixin ----------------------- */
   // @include default-text-color($black);
   letter-spacing: 3;

   /*   ----------------  adjust hue -----------*/

   background-color: adjust-hue(#011541, 70%);

   /* ----------------------  NESTING -------------------------- */
   a {
      color: yellow;
      /* -----------------  using hover ---------------------- */
      &:hover {
         color: lightblue;
      }
   }
   p {
      color: $grey;
      font-size: 30px;

      /* --------------  darkening a color  ------------- */

      background-color: darken(#ff0000, 30%);

      /* -----------  using compliment - this means it adds up the current background color with the color assigned--------- */
      background-color: complement($color: #011541); //or
      background-color: complement(#011541);
   }
   span {
      /* ------------------------   using extend ------------------------ */
      @extend p;
      font-family: "Lucida Sans", "Lucida Sans Regular", "Lucida Grande",
         "Lucida Sans Unicode", Geneva, Verdana, sans-serif;
      /* --------------  lightening a color  ------------- */

      background-color: lighten(#ff0000, 30%);
   }
   section {
      /* ---------------------  using the usable element ----------- */
      @extend %borderBoxElement;
   }
   // including transform method easy
   // @include transform(translateY(50%) scale(0.5));
}
#vert-nav {
   ul {
      /* & is used if the element has other properties */
      li:nth-child(1) {
         color: desaturate($color: #ff0000, $amount: 50%); // or
         background-color: desaturate(#0a3100, 70%);
      }
      li:nth-child(2) {
         color: saturate($color: #ff0000, $amount: 50%); // or
         background-color: saturate(#0a3100, 70%);
      }
      li:nth-child(3) {
         color: fade-out($color: #ff0000, $amount: 0.5);
         background-color: fade-in(#0a3100, 0.7);
      }
      li:nth-child(4) {
         color: rgba(0, 34, 100, $alpha: 0.5); // or
         background-color: mix(
            yellow,
            $white,
            60%
         ); // the % is how much of the !st color you want to mix of the 2nd.
      }
      li:nth-child(5) {
         /* -----------  adding grayscale -------------*/
         background-color: grayscale($brown);
      }
      li:nth-child(6) {
         /* -----------  adding color -------------*/
       /*   background-color: adjust-color($brown, $red: 0, $green: 10, $blue: 50);
         background-color: adjust-color(
            $lightblue,
            $hue: 30,
            $saturation: 10,
            $lightness: 30,
            $alpha: .2
         ); */
         background-color: shade( $red, 30%);// defines the amount of black % needed
         color: tint( $red, 30%);// defines the amount of white % needed

      }
   }
}
